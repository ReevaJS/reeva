package me.mattco.reeva.compiler.graph

@Suppress("SpellCheckingInspection")
enum class NodeType {
    Constant,
    FeedbackVector,
    Start,
    End,
    PropertyLoad,
    PropertyStore,

    //////////////////
    /// IR OPCODES ///
    //////////////////

    LdaTrue,
    LdaFalse,
    LdaUndefined,
    LdaNull,
    LdaZero,
    LdaConstant,
    LdaInt,
    Star,
    Mov,
    LdaNamedProperty,
    LdaKeyedProperty,
    StaNamedProperty,
    StaKeyedProperty,
    CreateArrayLiteral,
    StaArrayLiteralIndex,
    StaArrayLiteral,
    CreateObjectLiteral,
    Add,
    Sub,
    Mul,
    Div,
    Mod,
    Exp,
    BitwiseOr,
    BitwiseXor,
    BitwiseAnd,
    ShiftLeft,
    ShiftRight,
    ShiftRightUnsigned,
    Inc,
    Dec,
    Negate,
    BitwiseNot,
    StringAppend,
    ToBooleanLogicalNot,
    LogicalNot,
    TypeOf,
    DeletePropertyStrict,
    DeletePropertySloppy,
    LdaGlobal,
    StaGlobal,
    LdaCurrentEnv,
    StaCurrentEnv,
    LdaEnv,
    StaEnv,
    PushEnv,
    PopCurrentEnv,
    PopEnvs,
    Call,
    Call0,
    Call1,
    CallLastSpread,
    CallFromArray,
    CallRuntime,
    Construct,
    Construct0,
    ConstructLastSpread,
    ConstructFromArray,
    TestEqual,
    TestNotEqual,
    TestEqualStrict,
    TestNotEqualStrict,
    TestLessThan,
    TestGreaterThan,
    TestLessThanOrEqual,
    TestGreaterThanOrEqual,
    TestReferenceEqual,
    TestInstanceOf,
    TestIn,
    TestNullish,
    TestNull,
    TestUndefined,
    ToBoolean,
    ToNumber,
    ToNumeric,
    ToObject,
    ToString,
    Jump,
    JumpIfTrue,
    JumpIfFalse,
    JumpIfToBooleanTrue,
    JumpIfToBooleanFalse,
    JumpIfNull,
    JumpIfNotNull,
    JumpIfUndefined,
    JumpIfNotUndefined,
    JumpIfNullish,
    JumpIfNotNullish,
    JumpIfObject,
    JumpPlaceholder,
    Return,
    Throw,
    ThrowConstReassignment,
    ThrowUseBeforeInitIfEmpty,
    DefineGetterProperty,
    DefineSetterProperty,
    DeclareGlobals,
    CreateMappedArgumentsObject,
    CreateUnmappedArgumentsObject,
    GetIterator,
    CreateClosure,
    DebugBreakpoint,
}
